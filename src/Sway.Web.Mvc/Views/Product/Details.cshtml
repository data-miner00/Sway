@using Sway.Common
@using Sway.Web.Mvc.Models
@model ProductDetailsViewModel
@{
    ViewData["Title"] = "Details";
    var product = Model.Product;
    var ratings = Model.Ratings;
}

<partial name="_Notification" />

<div class="flex gap-4 bg-gray-50">
    <div class="relative">
        <img src="@Constants.TestItemPhotoUrl" alt="Shoe" />
        <form method="post" asp-action="Favourite" asp-controller="Product" asp-route-id="@Model.Product.Id">
            <input hidden name="id" value="@Model.Product.Id" />
            <button class="absolute top-4 right-4">
                @{
                    var heartIcon = Model.IsFavourited ? "bi-heart-fill" : "bi-heart";
                }
                <i class="bi @heartIcon"></i>
            </button>
        </form>
    </div>
    <div class="p-8">
        <p class="font-bold text-lg mb-2">@product.Name</p>

        <p class="mb-4">RM @product.Price.ToMoney()</p>

        <p class="mb-8">@product.Description</p>

        <form
            method="post"
            asp-action="AddToCart"
            asp-controller="ShoppingCart"
            asp-route-userId="@Constants.TestUserId"
        >
            <input type="text" hidden value="@product.Id" name="productId" />
            <input class="input w-full max-w-xs input-bordered mb-1" type="number" placeholder="Quantity" name="quantity" />
            <select class="select select-bordered w-full max-w-xs mb-1">
                <option disabled selected>Size</option>
                <option>S</option>
                <option>XL</option>
            </select>
            <p class="text-gray font-sm mb-4">@product.InStock pieces available</p>
            <div class="flex gap-4 items-center">
                <button class="btn btn-secondary" type="submit">Add to Cart</button>
                <button class="btn btn-primary" type="submit">Buy Now</button>
            </div>
        </form>

        <hr class="my-8" />

        <div class="flex gap-4">
            <div>
                @product.AverageRatings
                @{
                    var fullStarCount = Math.Floor(product.AverageRatings);
                    var emptyStarCount = 5 - fullStarCount;
                }

                @for(var i = 0; i < fullStarCount; i++)
                {
                    <i class="bi bi-star-fill"></i>
                }

                @for(var i = 0; i < emptyStarCount; i++)
                {
                    <i class="bi bi-star"></i>
                }
            </div>
            <div>
                1.1k Ratings
            </div>
        </div>

        <div>
            <p>ONLY @product.InStock LEFT</p>
            <p>AVERAGE DELIVERY TIME: 1-3 WORKING DAYS</p>
            <button hx-get="/Home/Privacy" hx-swap="innerHTML">Click to reveal Privacy.</button>
        </div>
    </div>
</div>

@if (ratings.Any())
{
    <div class="border border-solid border-gray-600 p-5 flex flex-col gap-5">
        @foreach (var rating in ratings)
        {
            <div class="bg-yellow-200 rounded-lg">
                <p>By @rating.AuthorId</p>
                <p>On @rating.CreatedAt.ToShortDateString()</p>
                <p>Rating: @rating.Rating</p>
                @if (rating.Comment is not null)
                {
                    <p>@rating.Comment</p>
                }
            </div>
        }
    </div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_LibraryScriptsPartial");}

    <script type="text/javascript">
        console.log("Product details loaded!");
    </script>
}
